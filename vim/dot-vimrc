execute pathogen#infect()

function! s:FindProjectFile(fname)
    return findfile( a:fname, ".;" )
endfunction

function ToggleHex()
    let l:modified=&mod
    let l:oldreadonly=&readonly
    let &readonly=0
    let l:oldmodifiable=&modifiable
    let &modifiable=1
    if !exists("b:editHex") || !b:editHex
        let b:oldft=&ft
        let b:oldbin=&bin
        setlocal binary
        silent :e

        let &ft="xxd"
        let b:editHex=1
        %!xxd
    else
        let &ft=b:oldft
        if !b:oldbin
            setlocal nobinary
        endif
        let b:editHex=0
        %!xxd -r
    endif
    let &mod=l:modified
    let &modifiable=l:oldmodifiable
endfunction

command -bar Hexmode call ToggleHex()

let b:clutter=1
function! ToggleClutter()
    if !b:clutter
        set list
        set number
        let b:clutter=1
    else
        set nolist
        set nonumber
        let b:clutter=0
    endif
    redraw
endfunction

command -bar ToggleClutter call ToggleClutter()

let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='papercolor'
let g:airline_powerline_fonts = 1
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#syntastic#error_symbol = 'E:'
let g:airline#extensions#syntastic#warning_symbol = 'W:'
let g:airline#extensions#syntastic#stl_format_err = '%E{[%e(#%fe)]}'
let g:airline#extensions#syntastic#stl_format_warn = '%W{[%w(#%fw)]}'
let g:airline#extensions#eclim#enabled = 1

let g:vim_markdown_folding_disabled = 1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = ['npm run lint --']
let s:pylintrc =  s:FindProjectFile(".pylintrc")
let g:syntastic_python_pylint_args = "--rcfile=\"" . s:pylintrc . "\""

let NERDTreeShowHidden = 1

autocmd StdinReadPre * let s:std_in = 1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

if $PUTTY_MODE == "DARK"
    set background=dark
else
    set background=light
endif

if has('gui_running')
    set guifont=Hack\ 9
    set guioptions-=L
endif

colorscheme solarized

highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

set autoindent
set cursorline
set guioptions-=m
set guioptions-=T
set guioptions-=r
set hidden
set history=1000
set ignorecase
set incsearch
set iskeyword-=:
"set mouse=a
set noerrorbells
set number
"set relativenumber
set ruler
set showcmd
set showmatch
set smartcase
set undolevels=1000
set vb
exec "set listchars=tab:\u2500\u2500\u2512,trail:\uB7,nbsp:~,eol:\u21A9"
set list

syntax on
filetype plugin indent on
set ts=4
set shiftwidth=4
set softtabstop=4
set formatoptions-=cro
set nofoldenable

autocmd FileType perl set tabstop=4|set shiftwidth=4|set softtabstop=4
autocmd FileType python set tabstop=4|set shiftwidth=4|set softtabstop=4|set expandtab
autocmd FileType javascript set tabstop=2|set shiftwidth=2|set softtabstop=2|set expandtab
autocmd FileType typescript set tabstop=2|set shiftwidth=2|set softtabstop=2|set expandtab

nnoremap <C-H> :Hexmode<CR>
inoremap <C-H> <Esc>:Hexmode<CR>
vnoremap <C-H> <C-U>:Hexmode<CR>

nnoremap <C-N><C-N> :NERDTreeToggle<CR>
nnoremap <C-N><C-G> :NERDTreeFind<CR>
nnoremap <C-N><C-W> :NERDTreeCWD<CR>

nnoremap <C-L><C-L> :set number!<CR>:set relativenumber!<CR>

nnoremap <C-O><C-O> :ToggleClutter<CR>

let jshint2_command='/usr/bin/jshint'

